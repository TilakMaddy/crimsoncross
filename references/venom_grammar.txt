%import common.CNAME
%import common.DIGIT
%import common.HEXDIGIT
%import common.LETTER
%import common.WS
%import common.INT
%import common.SIGNED_INT
%import common.ESCAPED_STRING

# Allow multiple comment styles
COMMENT: ";" /[^\\n]*/ | "//" /[^\\n]*/ | "#" /[^\\n]*/

start: function* data_segment?

# TODO: consider making entry block implicit, e.g.
# `"{" instruction+ block* "}"`
function: "function" LABEL_IDENT "{" block* "}"

data_segment: "data" "readonly" "{" data_section* "}"
data_section: "dbsection" LABEL_IDENT ":" data_item+
data_item: "db" (HEXSTR | LABEL)

block: LABEL_IDENT ":" "\\n" statement*

statement: (instruction | assignment) "\\n"
assignment: VAR_IDENT "=" expr
expr: instruction | operand
instruction: OPCODE operands_list?

operands_list: operand ("," operand)*

operand: VAR_IDENT | CONST | LABEL

CONST: SIGNED_INT | "0x" HEXDIGIT+
OPCODE: CNAME
VAR_IDENT: "%" (DIGIT|LETTER|"_"|":")+

# handy for identifier to be an escaped string sometimes
# (especially for machine-generated labels)
LABEL_IDENT: (NAME | ESCAPED_STRING)
LABEL: "@" LABEL_IDENT

DOUBLE_QUOTE: "\\""
NAME: (DIGIT|LETTER|"_")+
HEXSTR: "x" DOUBLE_QUOTE (HEXDIGIT|"_")+ DOUBLE_QUOTE

%ignore WS
%ignore COMMENT

